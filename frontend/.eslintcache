[{"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\index.js":"1","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\App.js":"2","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\store\\store.js":"3","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\users\\RegisterUser.js":"5","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\users\\LoginUser.js":"6","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Home\\Home.js":"7","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Profile\\Profile.js":"8","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\userAuthReducer.js":"9","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\ErrorMessage.js":"10","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Loading\\Loading.js":"11","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\users\\usersActions.js":"12","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\actionTypes.js":"13","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Profile\\UpdateProfile.js":"14","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\updateUserProfile.js":"15","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\userProfileReducer.js":"16","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\AddPost.js":"17","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\Posts.js":"18","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\postListReducer.js":"19","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\createPostReducer.js":"20","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\posts\\postActions.js":"21","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\EditPosts.js":"22","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\getPostReducer.js":"23"},{"size":315,"mtime":1615091305689,"results":"24","hashOfConfig":"25"},{"size":1287,"mtime":1615131127365,"results":"26","hashOfConfig":"25"},{"size":1291,"mtime":1615129725933,"results":"27","hashOfConfig":"25"},{"size":2771,"mtime":1615117787863,"results":"28","hashOfConfig":"25"},{"size":3524,"mtime":1615113485190,"results":"29","hashOfConfig":"25"},{"size":2366,"mtime":1615091305687,"results":"30","hashOfConfig":"25"},{"size":313,"mtime":1615112729437,"results":"31","hashOfConfig":"25"},{"size":1833,"mtime":1615116623805,"results":"32","hashOfConfig":"25"},{"size":970,"mtime":1615091305694,"results":"33","hashOfConfig":"25"},{"size":229,"mtime":1615091305681,"results":"34","hashOfConfig":"25"},{"size":169,"mtime":1615091305683,"results":"35","hashOfConfig":"25"},{"size":4137,"mtime":1615117491522,"results":"36","hashOfConfig":"25"},{"size":1969,"mtime":1615119577694,"results":"37","hashOfConfig":"25"},{"size":5106,"mtime":1615117454698,"results":"38","hashOfConfig":"25"},{"size":725,"mtime":1615095256124,"results":"39","hashOfConfig":"25"},{"size":715,"mtime":1615116167489,"results":"40","hashOfConfig":"25"},{"size":4316,"mtime":1615120785866,"results":"41","hashOfConfig":"25"},{"size":2780,"mtime":1615132847086,"results":"42","hashOfConfig":"25"},{"size":549,"mtime":1615126875151,"results":"43","hashOfConfig":"25"},{"size":558,"mtime":1615121094244,"results":"44","hashOfConfig":"25"},{"size":4174,"mtime":1615133375383,"results":"45","hashOfConfig":"25"},{"size":4481,"mtime":1615133866168,"results":"46","hashOfConfig":"25"},{"size":610,"mtime":1615133146894,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12joo1",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\index.js",[],["100","101"],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\App.js",["102"],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\store\\store.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Navbar\\Navbar.js",["103","104","105","106"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutUserAction } from '../../redux/actions/users/usersActions';\r\n\r\nconst Navbar = props => {\r\n  const state = useSelector(state => state.userLogin);\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUserAction());\r\n    history.push('/');\r\n  };\r\n\r\n  const { userInfo, loading, error } = state;\r\n  return (\r\n    <header>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n        <a className='navbar-brand' to='/'>\r\n          Organic\r\n        </a>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#navbarColor01'\r\n          aria-controls='navbarColor01'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'>\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n\r\n        <div className='collapse navbar-collapse' id='navbarColor01'>\r\n          <ul className='navbar-nav m-auto'>\r\n            <li className='nav-item active'>\r\n              <a className='nav-link' to='/'>\r\n                Home <span className='sr-only'>(current)</span>\r\n              </a>\r\n            </li>\r\n            {!userInfo ? (\r\n              <>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/login'>\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/register'>\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/posts'>\r\n                    Posts\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/addpost'>\r\n                    Add Post\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/profile'>\r\n                    Profile\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    onClick={logoutHandler}\r\n                    className='nav-link'\r\n                    to='/login'>\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\users\\RegisterUser.js",["107"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUserAction } from '../../redux/actions/users/usersActions';\r\n\r\nconst RegisterUser = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Grab user login from store\r\n  const userLogin = useSelector(state => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n  //Redirect if user is login/authenticated\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/dashboard');\r\n    }\r\n  }, [userInfo]);\r\n\r\n  const formSubmitHandler = e => {\r\n    e.preventDefault();\r\n    //disptach action here\r\n   \r\n    dispatch(registerUserAction(name, email, password,status));\r\n  };\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          <h1 className='text-center'>Register</h1>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            <fieldset>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Name</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={e => setName(e.target.value)}\r\n                  type='text'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter Name'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputPassword1'>Password</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={e => setpassword(e.target.value)}\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='exampleInputPassword1'\r\n                  placeholder='Password'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n              <label htmlFor='exampleInputSelect1'>Status</label>\r\n                        <select\r\n                          id=\"exampleInputSelect1\"\r\n                          value={status}\r\n                          onChange={e => setStatus(e.target.value)}\r\n                          className='custom-select'>\r\n                          <option defaultValue='programming'>\r\n                            None\r\n                          </option>\r\n                          <option value='Active'>Active</option>\r\n                          <option value='Inactive'>Inactive</option>\r\n                        </select>\r\n                      </div>\r\n              <button type='submit' className='btn btn-info m-auto'>\r\n                Register\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterUser;\r\n","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\users\\LoginUser.js",["108"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUserAction } from '../../redux/actions/users/usersActions';\r\nimport ErrorMessage from '../ErrorMessage';\r\n\r\nconst LoginUser = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Grab pieces of data from our store that we care about\r\n\r\n  const state = useSelector(state => {\r\n    return state.userLogin;\r\n  });\r\n\r\n  const { loading, userInfo, error } = state;\r\n\r\n  //Submit handler\r\n  const loginUserSubmitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(email, password);\r\n    dispatch(loginUserAction(email, password));\r\n  };\r\n\r\n  //Redirect\r\n  useEffect(() => {\r\n    if (userInfo) history.push('/profile');\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          {loading && <h1>Loading</h1>}\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          <form onSubmit={loginUserSubmitHandler}>\r\n            <fieldset>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputPassword1'>Password</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='exampleInputPassword1'\r\n                  placeholder='Password'\r\n                />\r\n              </div>\r\n              <button type='submit' className='btn btn-info m-auto'>\r\n                Login\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Home\\Home.js",["109","110","111"],"import React from 'react';\r\nimport './Home.css';\r\nimport bookpg from '../../assets/img/book.jpg';\r\nimport videoSource from '../../assets/books.mp4';\r\nimport { Link } from 'react-router-dom';\r\nconst Home = () => {\r\n  return (\r\n    <div className='Container'>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\userAuthReducer.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\ErrorMessage.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Loading\\Loading.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\users\\usersActions.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\actionTypes.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Profile\\UpdateProfile.js",["112","113"],"import React ,{useState}from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { updateUser } from '../../redux/actions/users/usersActions';\r\n\r\nconst UpdateProfile = () =>{\r\n\r\nconst userLogin =  useSelector(state => state.userLogin)\r\nconst {userInfo} = userLogin;\r\n\r\n\r\nconst dispatch  = useDispatch();\r\n\r\nconst [name,setName] = useState(userInfo?.name);\r\nconst [email,setEmail] = useState(userInfo?.email);\r\nconst [password,setPassword]   = useState('');\r\nconst [status,setStatus]   = useState(userInfo?.status);\r\n\r\n\r\nconst updatedUser = useSelector(state => state.updatedUser);\r\n\r\nconst { user, loading , success , error } = updatedUser;\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    console.log(\"1\");\r\n    dispatch(updateUser(name,email,password,status))\r\n}\r\n\r\n\r\n    return(\r\n        <div className=\"row container-height\">\r\n            <div className=\"col-lg-6 col-md-6 m-auto\">\r\n                <div className=\"container\">\r\n                    { error && <h1> error</h1>}\r\n                    { loading && <h1> Loading...</h1>}\r\n                    <div className=\"text-center\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <fieldset>\r\n                                <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleInputEmail1\">\r\n                                                Name\r\n                                        </label>\r\n                                        <input\r\n                                        value={name}\r\n                                        onChange = {e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id='exampleInputEmail1'\r\n                                        aria-describedby='emailHelp'\r\n                                        placeholder=\"Enter Name\"\r\n                                        />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleInputEmail1\">\r\n                                                Email Address\r\n                                        </label>\r\n                                        <input\r\n                                        value={email}\r\n                                        onChange = {e => setEmail(e.target.value)}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id='exampleInputEmail1'\r\n                                        aria-describedby='emailHelp'\r\n                                        placeholder=\"Enter Email\"\r\n                                        />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleInputPassword1\">\r\n                                                Password\r\n                                        </label>\r\n                                        <input\r\n                                         value={password}\r\n                                         onChange = {e => setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        id='exampleInputEmail1'\r\n                                        aria-describedby='emailHelp'\r\n                                        placeholder=\"Enter Password\"\r\n                                        />\r\n                                </div>   \r\n                                <div className='form-group'>\r\n                                <label htmlFor='exampleInputSelect1'>Status</label>\r\n                                            <select\r\n                                            id=\"exampleInputSelect1\"\r\n                                            value={status}\r\n                                            onChange={e => setStatus(e.target.value)}\r\n                                            className='custom-select'>\r\n                                            <option defaultValue='programming'>\r\n                                                None\r\n                                            </option>\r\n                                            <option value='Active'>Active</option>\r\n                                            <option value='Inactive'>Inactive</option>\r\n                                            </select>\r\n                                    </div> \r\n                                <button type=\"submit\" className=\"btn btn-primary m-auto\"> \r\n                                    Update Your profile\r\n                                </button>\r\n\r\n\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateProfile;","C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\updateUserProfile.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\users\\userProfileReducer.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\AddPost.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\Posts.js",["114","115"],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\postListReducer.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\createPostReducer.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\actions\\posts\\postActions.js",[],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\components\\Posts\\EditPosts.js",["116"],"C:\\Users\\SACHIN\\projects\\organic-project\\book-keeping-app-youtube-playlist\\frontend\\src\\redux\\reducers\\posts\\getPostReducer.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":18,"column":21,"nodeType":"123","messageId":"124","endLine":18,"endColumn":28},{"ruleId":"121","severity":1,"message":"126","line":18,"column":30,"nodeType":"123","messageId":"124","endLine":18,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":22,"column":9,"nodeType":"129","endLine":22,"endColumn":44},{"ruleId":"127","severity":1,"message":"128","line":39,"column":15,"nodeType":"129","endLine":39,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":23,"column":6,"nodeType":"132","endLine":23,"endColumn":16,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":13,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"137","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":19},{"ruleId":"121","severity":1,"message":"138","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":21,"column":9,"nodeType":"123","messageId":"124","endLine":21,"endColumn":13},{"ruleId":"121","severity":1,"message":"140","line":21,"column":25,"nodeType":"123","messageId":"124","endLine":21,"endColumn":32},{"ruleId":"121","severity":1,"message":"138","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"121","severity":1,"message":"141","line":22,"column":9,"nodeType":"123","messageId":"124","endLine":22,"endColumn":21},{"ruleId":"121","severity":1,"message":"138","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["145"],"'bookpg' is defined but never used.","'videoSource' is defined but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'success' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [history, userInfo]",{"range":"150","text":"151"},"Update the dependencies array to be: [history, state, userInfo]",{"range":"152","text":"153"},[713,723],"[history, userInfo]",[852,859],"[history, state, userInfo]"]